<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法-01背包问题</title>
      <link href="/2020/04/04/0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/"/>
      <url>/2020/04/04/0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">10000</span>;</span><br><span class="line"><span class="keyword">int</span> w[MAXN], v[MAXN];</span><br><span class="line"><span class="keyword">int</span> m[MAXN][MAXN];</span><br><span class="line"><span class="keyword">int</span> x[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KnapSack</span><span class="params">(<span class="keyword">int</span> w[], <span class="keyword">int</span> v[], <span class="keyword">int</span> c, <span class="keyword">int</span> n, <span class="keyword">int</span> m[][MAXN])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> jMax = min(w[n] - <span class="number">1</span>, c);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=jMax;j++)</span><br><span class="line">    m[n][j] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=w[n];j&lt;=c;j++)</span><br><span class="line">    m[n][j] = v[n];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;<span class="number">1</span>;i--)</span><br><span class="line">  &#123;</span><br><span class="line">    jMax = min(w[i] - <span class="number">1</span>, c);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=jMax;j++)</span><br><span class="line">      m[i][j] = m[i+<span class="number">1</span>][j];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=w[i];j&lt;=c;j++)</span><br><span class="line">      m[i][j] = max(m[i+<span class="number">1</span>][j], m[i+<span class="number">1</span>][j - w[i]] + v[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  m[<span class="number">1</span>][c] = m[<span class="number">2</span>][c];</span><br><span class="line">  <span class="keyword">if</span>(c &gt;= w[<span class="number">1</span>])</span><br><span class="line">    m[<span class="number">1</span>][c] = max(m[<span class="number">1</span>][c], m[<span class="number">2</span>][c - w[<span class="number">1</span>]] + v[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">TraceBack</span><span class="params">(<span class="keyword">int</span> m[][MAXN], <span class="keyword">int</span> w[], <span class="keyword">int</span> c, <span class="keyword">int</span> n, <span class="keyword">int</span> x[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(m[i][c] == m[i+<span class="number">1</span>][c])</span><br><span class="line">      x[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      x[i] = <span class="number">1</span>;</span><br><span class="line">      c -= w[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  x[n] = (m[n][c]) ? <span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n = <span class="number">5</span>;</span><br><span class="line">  <span class="keyword">int</span> c = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;v[i]&gt;&gt;w[i];</span><br><span class="line">  &#125;</span><br><span class="line">  KnapSack(w, v, c, n, m);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=c;j++)</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;m[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;m[<span class="number">1</span>][c]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  TraceBack(m, w, c, n, x);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">if</span>(x[i]) <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 动态规划 dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法-最长公共子串问题</title>
      <link href="/2020/04/04/%E6%9C%80%E5%A4%A7%E5%85%AC%E5%85%B1%E5%AD%90%E4%B8%B2%E9%97%AE%E9%A2%98/"/>
      <url>/2020/04/04/%E6%9C%80%E5%A4%A7%E5%85%AC%E5%85%B1%E5%AD%90%E4%B8%B2%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">int</span> c[MAXN][MAXN];</span><br><span class="line"><span class="keyword">int</span> b[MAXN][MAXN];</span><br><span class="line"><span class="comment">//1代表↖ 2代表↑  3代表←</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCSLength</span><span class="params">(<span class="keyword">char</span> x[], <span class="keyword">int</span> m, <span class="keyword">char</span> y[], <span class="keyword">int</span> n, <span class="keyword">int</span> c[][MAXN], <span class="keyword">int</span> b[][MAXN])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) c[i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) c[<span class="number">0</span>][i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(x[i] == y[j])</span><br><span class="line">      &#123;</span><br><span class="line">        c[i][j] = c[i<span class="number">-1</span>][j<span class="number">-1</span>] + <span class="number">1</span>;</span><br><span class="line">        b[i][j] = <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(c[i<span class="number">-1</span>][j] &gt;= c[i][j<span class="number">-1</span>])</span><br><span class="line">      &#123;</span><br><span class="line">        c[i][j] = c[i<span class="number">-1</span>][j];</span><br><span class="line">        b[i][j] = <span class="number">2</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        c[i][j] = c[i][j<span class="number">-1</span>];</span><br><span class="line">        b[i][j] = <span class="number">3</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCStraceback</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">char</span> x[], <span class="keyword">int</span> b[][MAXN])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(i == <span class="number">0</span> || j == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">if</span>(b[i][j] == <span class="number">1</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    LCStraceback(i<span class="number">-1</span>, j<span class="number">-1</span>, x, b);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;x[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(b[i][j] == <span class="number">2</span>) LCStraceback(i<span class="number">-1</span>, j, x, b);</span><br><span class="line">  <span class="keyword">else</span> LCStraceback(i, j<span class="number">-1</span>, x, b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> x[] = <span class="string">" ABCBDAB"</span>, y[] = <span class="string">" BADCDBA"</span>;</span><br><span class="line">  LCSLength(x, <span class="number">7</span>, y, <span class="number">7</span>, c, b);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">7</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">7</span>;j++)</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;c[i][j]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  LCStraceback(<span class="number">7</span>, <span class="number">7</span>, x, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 动态规划 dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/04/03/hello-world/"/>
      <url>/2020/04/03/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="惯例，一切从HelloWorld开始！"><a href="#惯例，一切从HelloWorld开始！" class="headerlink" title="惯例，一切从HelloWorld开始！"></a>惯例，一切从HelloWorld开始！</h3>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git创建版本库及添加远程库</title>
      <link href="/2020/01/23/Git%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93%E5%8F%8A%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E5%BA%93/"/>
      <url>/2020/01/23/Git%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93%E5%8F%8A%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>记录一下如果用Git创建一个本地仓库，在github上创建一个远程仓库，然后让这两个仓库进行远程同步。</p><h2 id="创建本地版本库-repository"><a href="#创建本地版本库-repository" class="headerlink" title="创建本地版本库(repository)"></a>创建本地版本库(repository)</h2><p>首先找到一个合适的位置，在gitbash中执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir CodeRepository</span><br><span class="line">$ cd CodeRepository</span><br><span class="line">$ pwd</span><br><span class="line">&#x2F;d&#x2F;CodeRepository</span><br></pre></td></tr></table></figure><p><strong>pwd</strong>是用来显示当前目录</p><p>第二步，用初始化命令把这个目录变成Git可以管理的仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">Initialized empty Git repository in D:&#x2F;CodeRepository&#x2F;.git&#x2F;</span><br></pre></td></tr></table></figure><p>第三步，编辑一个txt文件(最好不要用记事本，可以使用Notepad++)，然后将这个文件放到刚才建立的Git仓库</p><p>用 git add 命令把文件添加到仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add readme.txt</span><br></pre></td></tr></table></figure><p>用 git commit 把文件提交到仓库，其中参数-m 后面为本次提交的说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &quot;wrote a readme file&quot;</span><br><span class="line">[master (root-commit) d1bb629] wrote a readme file</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 readme.txt</span><br></pre></td></tr></table></figure><h2 id="在Github上添加远程仓库"><a href="#在Github上添加远程仓库" class="headerlink" title="在Github上添加远程仓库"></a>在Github上添加远程仓库</h2><p>准备工作，首先要做好SSH的准备工作，具体教程在下面网址<br><a href="https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5" target="_blank" rel="noopener">Git - 生成 SSH 公钥</a></p><p>首先在Github上新建一个仓库，将仓库的克隆方式改为Use SSH<br>然后将本地仓库与远程仓库关联<br>在本地创建的仓库CodeRepository下运行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github.com:Github用户名&#x2F;CodeRepository</span><br></pre></td></tr></table></figure><p>然后就可以把本地库的所有内容推送到远程库上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master</span><br><span class="line">Enumerating objects: 15, done.</span><br><span class="line">Counting objects: 100% (15&#x2F;15), done.</span><br><span class="line">Delta compression using up to 12 threads</span><br><span class="line">Compressing objects: 100% (11&#x2F;11), done.</span><br><span class="line">Writing objects: 100% (14&#x2F;14), 501.96 KiB | 1.51 MiB&#x2F;s, done.</span><br><span class="line">Total 14 (delta 1), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (1&#x2F;1), done.</span><br><span class="line">To github.com:WeiSibo&#x2F;SourceManager</span><br><span class="line">   82458ee..163f7fc  master -&gt; master</span><br><span class="line">Branch &#39;master&#39; set up to track remote branch &#39;master&#39; from &#39;origin&#39;.</span><br></pre></td></tr></table></figure><p>从现在开始，只要本地作了提交，就可以通过命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>把本地的master分支的最新修改推送到Github</p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>注意:如果在github上新建仓库时勾选了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Initialize this repository with a README</span><br></pre></td></tr></table></figure><p>那么在github上的仓库中就会生成一个README.md文件，这样会导致远程库和本地库的版本不一致，需要先执行代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master</span><br></pre></td></tr></table></figure><p>该命令的意思是把远程库中的更新合并到本地库中，–rebase的作用是取消掉本地库中刚刚的commit，并把他们接到更新后的版本库之中。（注意，执行前请先进行代码备份）</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用校园邮箱申请一年Jetbrains IDE全家桶</title>
      <link href="/2019/10/26/%E6%A0%A1%E5%9B%AD%E9%82%AE%E7%AE%B1%E7%94%B3%E8%AF%B7%E4%B8%80%E5%B9%B4JetbrainsIDE%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
      <url>/2019/10/26/%E6%A0%A1%E5%9B%AD%E9%82%AE%E7%AE%B1%E7%94%B3%E8%AF%B7%E4%B8%80%E5%B9%B4JetbrainsIDE%E5%85%A8%E5%AE%B6%E6%A1%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong><em>在开头首先感谢王灿学长分享的方法</em></strong></p><p><a href="https://imgchr.com/i/GwTvPP" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/04/04/GwTvPP.png"  alt="GwTvPP.png"></a></p><p>Jets Brains 有 支持 a Java 的 IntelliJ IDEA 、 支持 C/C ++ 的 CLion 、 支持HTML 、 CSS 、J Js s 等 b Web 相关 语言 的 Web Storm 、 数据库 管理 系统Data Grip 、n Python 开发 环境 Py，这些IDE都非常强大！</p><p>​    下面开始介绍如何使用学生邮箱免费使用JetBrains全家桶</p><ol><li>打开齐工大官网</li><li>点击页面右下角“信息系统导航”</li><li>点开最下面“专项服务”内的“校园邮（学生邮箱）”，或忽略前两步直接打开学生邮网址：<a href="https://edu.icoremail.net/" target="_blank" rel="noopener">https://edu.icoremail.net/</a></li><li>选择“齐鲁工业大学”，填写学号，填写密码（默认身份证后位），点击登录，若显示未激活点击登录按钮下方账号激活。</li></ol><p><a href="https://imgchr.com/i/GwTX5t" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/04/04/GwTX5t.png"  alt="GwTX5t.png"></a></p><p>5.打开 JetBrains 官网 <a href="https://www.jetbrains.com/，点击右上角用户图标" target="_blank" rel="noopener">https://www.jetbrains.com/，点击右上角用户图标</a></p><p><a href="https://imgchr.com/i/GwTLVA" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/04/04/GwTLVA.png"  alt="GwTLVA.png"></a></p><p>6.如果已注册则填写账号密码登录 Sign In，若未注册则填写自己的邮箱（可以不是学生邮箱）点击 Sign Up 注册。</p><p><a href="https://imgchr.com/i/GwTOUI" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/04/04/GwTOUI.png"  alt="GwTOUI.png"></a></p><p>7.注册时 JetBrains 会自动向你填写的邮箱发一封注册邮件，点击邮件里的 Confirm your account 按指示完成注册</p><p>8.填写姓名、用户名、密码、同意用户条款，点击 Submit 完成注册</p><p><a href="https://imgchr.com/i/GwTx8f" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/04/04/GwTx8f.png"  alt="GwTx8f.png"></a></p><p>9.在跳转的页面点击 Apply for a free student or teacher license 申请学生免费使用</p><p><a href="https://imgchr.com/i/GwTz28" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/04/04/GwTz28.png"  alt="GwTz28.png"></a></p><p>10.点击 Apply Now 或切换中文后的立即申请</p><p>11.填写基本信息与校园邮邮箱地址，邮箱格式为：学号<a href="mailto:+@stu.qlu.edu.cn">+@stu.qlu.edu.cn</a>。见下页</p><p><a href="https://imgchr.com/i/Gw7SxS" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/04/04/Gw7SxS.png"  alt="Gw7SxS.png"></a></p><p>12.登录学生邮箱等待收到 JetBrains 发出的核对邮件（可能需要几十秒到几十分钟），收到后点击 Confirm Request 确认。</p><p><a href="https://imgchr.com/i/Gw79Kg" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/04/04/Gw79Kg.png"  alt="Gw79Kg.png"></a></p><p>13.恭喜你，已经完成了一年的免费 JetBrains 所有软件的授权，你现在就可以去JetBrains 官网下载 ToolBox 软件，从 Toolbox 软件内下载管理你的所有 JetBrains<br>软件了</p><p><a href="https://imgchr.com/i/Gw7CrQ" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/04/04/Gw7CrQ.png"  alt="Gw7CrQ.png"></a></p><ol start="14"><li><p>安装完毕后 Toolbox App 会开机自动启动并显示在右下角，点击登录后就可以安装你喜欢使用的任何 IDE 了！</p><p><a href="https://imgchr.com/i/Gw7Pbj" target="_blank" rel="noopener"><img src="/" class="lazyload" data-src="https://s1.ax1x.com/2020/04/04/Gw7Pbj.png"  alt="Gw7Pbj.png"></a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
